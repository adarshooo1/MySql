There are 3 types of join:
Inner Join:-
In Inner joins we select which table we want to be in the left,

cmd:select *
    from transaction inner join buyer
    on transaction.customer_id = buyer.customer_id;

    //Here after keyword:- Inner join we select buyer table item in the left and transaction table item at left.
    //Then we relate transaction (customer_id) with buyer (customer_id).

//As well we can we can set them as naming convention:
    cmd:select transaction_Id,first_name,last_name,amount
        from transaction inner join buyer
        on transaction.customer_id = buyer.customer_id;    

        //Here we didn't use customer_id because in our data every customer doesn't have customer_id. But we can do like this also.

//Left Join:-
    //where we use inner join in the previous example just we have to use (left join) in the place of inner join, It will just make the buyer table at the left side then transaction table to the right.
    
    cmd:select *
    from transaction inner left buyer
    on transaction.customer_id = buyer.customer_id;

//Light Join:-
    //where we use inner join in the previous example just we have to use (left join) in the place of inner join, It will just make the transaction table at the left side then buyer table to the right.

    cmd:select *
    from transaction right join buyer
    on transaction.customer_id = buyer.customer_id;

//Double Table Joins:-
    select
    orderNumber,status, o.orderNumber , customerName, salesRepEmployeeNumber, firstName
    from orders o
    join customers c
    on c.customerNumber = o.customerNumber;

//Multiple Table Joins:-
    select
    orderNumber,status, o.orderNumber , customerName, salesRepEmployeeNumber, firstName
    from orders o
    join customers c
    on c.customerNumber = o.customerNumber
    join employees e
    on c.salesRepEmployeeNumber = e.employeeNumber;

// Self Join This is Explicit Join because here we use on clause;
select
mgr.employeeNumber,
mgr.jobTitle,
mgr.firstName,
mgr.lastName,
emp.firstName,
emp.lastName,
mgr.email as "Report At"
from employees emp
inner join employees mgr
on mgr.employeeNumber = emp.reportsTo;

// Example of self join to demonstrate Implicit Join because here we use Where clause; 
select
mgr.employeeNumber,
mgr.jobTitle,
mgr.firstName,
mgr.lastName,
emp.firstName,
emp.lastName,
mgr.email as "Report At"
from employees emp
inner join employees mgr
Where mgr.employeeNumber = emp.reportsTo;

-- Joins Using using clause, We implement using clause where in both the table we have columns with same name that represents the same data.
-- Ex: customer.officeNumber = order.officeNumber , then we can simply use using clause : using(customerNumber)
select c.customerNumber, customerName, status from customers c
inner join orders o using (customerNumber);

-- Explicit join: In Order to use (on) to join tables.
select c.customerNumber, customerName, status from customers c
join orders o on c.customerNumber = o.customerNumber;

-- Implicit join: In Order to use (where) to join tables.
select c.customerNumber, customerName, status from customers c, orders o
where c.customerNumber = o.customerNumber;

-- Outer Join, Because we merging results of a two table  having same customerNumber column, using Left/Right Joins.
select c.customerNumber,
	   customerName,
       status
       from customers c
       left join orders o on c.customerNumber = o.customerNumber;

-- Self Outer Join, Because we merging results of a same table, using Left/Right Joins.
 SELECT mgr.employeeNumber as "Id",
 	emp.jobTitle as "Designation",
 	emp.lastName as "Name",
        emp.employeeNumber as "Emp Id",
        mgr.jobTitle as "Level",
        mgr.lastName as "Employee Name",
        mgr.email as "Reporting E-mail"
        from employees emp
	left join employees mgr
        on mgr.employeeNumber = emp.reportsTo;
    
-- Natural Join: We don't specify on which we have to perform joins & when we use Natural Joins then it unified the columns which have same results, Like here customer number is same in both.(Not Recommended)
select * from customers natural join orders; 
